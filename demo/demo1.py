#!/usr/bin/python
# -*- coding: UTF-8 -*-

#采用缩进方式 当语句以冒号“:”结尾时，缩进的语句视为代码块
a=100
if a>100:
    print a
else:
    print -a
print "################数据类型#################"
#在python中能够直接处理的数据类型有：
#整数 有时候用十六进制表示整数比较方便，十六进制用0x前缀和0­9，a­f表示
b=0xa2
b=111
print b
#浮点数  但是对于很大或很 小的浮点数，就必须用科学计数法表示，把10用e替代，1.23x10 就是1.23e9，或者12.3e8，0.000012可以写 成1.2e‐5
a=1.23e9
a=1.23e-1
print a
#字符串 字符串是以''或""括起来的任意文本如果字符串内部既包含'又包含"怎么办？可以用转义字符\来标识 转义字符\可以转义很多字符，比如\n表示换行，\t表示制表符，字符\本身也要转义，所以\\表示的字符就是\
str='hello'
str="I'm OK I\'m \"ok\" \nmy name is zhangsan \t good"
print str
print r'\\\t\\\\'
print """如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，
Python允许用'''...'''的格式表示多行内容""";
#布尔值 一个布尔值只有True、False两种值，要么是True，要么是False 在Python中，可以直接用True、False表示布尔值（请注意大小写）
print True and True
print False and Flase
print True or False
print not True
#空值 空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。
#此外，Python还提供了列表、字典等多种数据类型，还允许创建自定义数据类型

print "################变量#################"
################变量#################
#变量在程序中就是用一个变量名表示了，变量名必须是大小写英文、数字和_的组合，且不能用数字开头
#在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量
t_001=231234
print t_001
t_001='ABCD'
print t_001
#这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类
#型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言

#理解变量在计算机内存中的表示也非常重要。当我们写：
a = 'ABC'
#时，Python解释器干了两件事情：
# 1.  在内存中创建了一个'ABC'的字符串；
# 2.  在内存中创建了一个名为a的变量，并把它指向'ABC'。

print "################常量#################"
################常量#################
# 常量 所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。。在Python中，通常用全部大写的变量名表示常量
#但事实上PI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法，如果你一定要改变变量PI的值，也没人能拦住你。
PI=1324134
print PI

#整数的除法为什么也是精确的 整数除法永远是整数，即使除不尽。要做精确的除法，只需把其中一个整数换成浮点数做除法就可以
print 10/3
print 10.0/3
#因为整数除法只取结果的整数部分，所以Python还提供一个余数运算，可以得到两个整数相除的余数
print 10%3

#Python支持多种数据类型，在计算机内部，可以把任何数据都看成一个“对象”，而变量就是在程序中用来指向这些
# 数据对象的，对变量赋值就是把数据和变量给关联起来。